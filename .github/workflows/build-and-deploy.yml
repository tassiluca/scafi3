name: CI/CD Process
on:
  workflow_call:
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2025, macos-14, ubuntu-24.04]
    runs-on: ${{ matrix.os }}
    concurrency:
      group: build-${{ github.workflow }}-${{ matrix.os }}-${{ github.event.number || github.ref }}
      cancel-in-progress: true
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v5.0.0
        with:
          fetch-depth: 0
      - name: Setup LLVM
        uses: aminya/setup-cpp@v1
        with:
          compiler: llvm-19
          make: true
          clang: true
      - uses: nicolasfara/build-check-deploy-sbt-action@1.0.27
        with:
          should-run-codecov: ${{ runner.os == 'Linux' }}
          codecov-directory: "target/"
          check-command: sbt +scalafmtCheckAll +scalafmtSbtCheck '+scalafixAll --check' +test +coverageAggregate
          should-deploy: false
          maven-central-username: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          maven-central-password: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          signing-key: ${{ secrets.SIGNING_KEY }}
          signing-password: ${{ secrets.SIGNING_PASSWORD }}
          codecov-token: ${{ secrets.CODECOV_TOKEN }}
  release:
    permissions:
      contents: write
      packages: write
    concurrency:
      # Only one release job at a time. Strictly sequential.
      group: release-${{ github.workflow }}-${{ github.event.number || github.ref }}
    needs:
      - build
    runs-on: ubuntu-latest
    if: >-
      !github.event.repository.fork
      && (
        github.event_name != 'pull_request'
        || github.event.pull_request.head.repo.full_name == github.repository
      )
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
        with:
          token: ${{ secrets.DEPLOYMENT_TOKEN }}
      - name: Install Node
        uses: actions/setup-node@v5.0.0
        with:
          node-version-file: package.json
      - uses: nicolasfara/build-check-deploy-sbt-action@1.0.27
        with:
          build-command: true
          check-command: true
          deploy-command: |
            npm install
            npx semantic-release
          retries-on-failure: 1
          should-run-codecov: false
          should-deploy: true
          github-token: ${{ github.token }}
          maven-central-username: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          maven-central-password: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          signing-key: ${{ secrets.SIGNING_KEY }}
          signing-password: ${{ secrets.SIGNING_PASSWORD }}
  success:
    runs-on: ubuntu-24.04
    needs:
      - release
      - build
    if: >-
      always() && (
        contains(join(needs.*.result, ','), 'failure')
        || !contains(join(needs.*.result, ','), 'cancelled')
      )
    steps:
      - name: Verify that there were no failures
        run: ${{ !contains(join(needs.*.result, ','), 'failure') }}
